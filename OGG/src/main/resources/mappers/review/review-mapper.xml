<?xml version="1.0" encoding="UTF-8"?>
<!-- mybatis mapper 설정 파일임을 선언한다. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

	<mapper namespace="com.project.ogg.review.model.mapper.ReviewMapper">
	
	<!-- REVIEW sql-->
	<sql id="reviewSql">
		SELECT  RV_NO, 
		        RV_WRITER_NO,
		        F_CODE,
		        F_TYPE,
		        RV_DATE, 
		        RV_UPDATE, 
		        RV_CONTENT, 
		        RV_STATUS, 
		        RV_LIKES,
		        RV_READ_COUNT,
		        RV_CMT_COUNT,
		        M.M_NICKNAME	
		FROM 	REVIEW R
		JOIN 	MEMBER M ON (M.M_NO = R.RV_WRITER_NO)
	</sql>
	
	<!-- REVIEW_CMT sql-->
	<sql id="reviewCmtSql">
		SELECT  CMT_NO, 
		        RV_NO, 
		        CMT_WRITER_NO, 
		        CMT_DATE, 
		        CMT_UPDATE, 
		        CMT_CONTENT, 
		        CMT_STATUS, 
		        CMT_LIKES, 
		        CMT_GROUP, 
		        CMT_DEPTH, 
		        M.M_NICKNAME
		FROM 	REVIEW_CMT R
		JOIN 	MEMBER M ON (M.M_NO = R.CMT_WRITER_NO)
	</sql>
	
	<!-- REVIEW resultMap-->
	<resultMap type="Review" id="reviewResultMap">
		<id property="rvNo" column="RV_NO" />
		<result property="rvWriterNo" column="RV_WRITER_NO" />
		<result property="fCode" column="F_CODE" />
		<result property="fType" column="F_TYPE" />
		<result property="rvDate" column="RV_DATE" />
		<result property="rvUpdate" column="RV_UPDATE" />
		<result property="rvContent" column="RV_CONTENT" />
		<result property="rvStatus" column="RV_STATUS" />
		<result property="rvLikes" column="RV_LIKES" />
		<result property="rvReadCount" column="RV_READ_COUNT" />
		<result property="rvCmtCount" column="RV_CMT_COUNT" />
		<result property="rvNickname" column="M_NICKNAME" />
	</resultMap>	

	<!-- REVIEW_CMT resultMap-->
	<resultMap type="ReviewCmt" id="reviewCmtResultMap">
		<id property="cmtNo" column="CMT_NO" />
		<result property="rvNo" column="RV_NO" />
		<result property="cmtWriterNo" column="CMT_WRITER_NO" />
		<result property="cmtDate" column="CMT_DATE" />
		<result property="cmtUpDate" column="CMT_UPDATE" />
		<result property="cmtContent" column="CMT_CONTENT" />
		<result property="cmtStatus" column="CMT_STATUS" />
		<result property="cmtLikes" column="CMT_LIKES" />
		<result property="cmtGroup" column="CMT_GROUP" />
		<result property="cmtDepth" column="CMT_DEPTH" />
		<result property="cmtNickname" column="M_NICKNAME" />
	</resultMap>	

	<!-- FILM resultMap-->
	<resultMap type="Film" id="filmResultMap">
		<id property="fCode" column="F_CODE" />
		<result property="fTitle" column="F_TITLE" />
	</resultMap>	
	
	<!-- 영화 체크 -->		
	<select id="checkFilm" parameterType="_int" resultMap="filmResultMap">
		SELECT  *
		FROM 	FILM
		WHERE 	F_CODE = #{fCode}
	</select>
	
	<!-- 영화 등록 -->
	<insert id="insertFilm" parameterType="Film">
		INSERT INTO FILM (
	            F_CODE,
	            F_TYPE,
	            F_TITLE 
			)
			VALUES(
				#{fCode},
				DEFAULT,
				#{fTitle}
	      	)	
	</insert>
	
	<!-- 리뷰 조회 (상세) -->
	<select id="selectReviewByNo" parameterType="_int" resultMap="reviewResultMap">
		<include refid="reviewSql"></include>
		WHERE 	RV_STATUS = 'Y' AND 
				RV_NO = #{no} 
	</select>

	
	<!-- 댓글수 조회 (리뷰별) -->
	<select id="selectCmtCount" parameterType="_int" resultType="_int">
		SELECT  COUNT(*) 
		FROM 	REVIEW_CMT 
		WHERE	CMT_STATUS = 'Y' AND 
			  	RV_NO= #{no}
	</select>
	
	<!-- 댓글 조회 (리뷰 번호) -->
	<select id="selectCmtByReviewNo" parameterType="_int" resultMap="reviewCmtResultMap">
		<include refid="reviewCmtSql"></include>
		WHERE 	 CMT_STATUS = 'Y' AND 
				 RV_NO = #{no}
		ORDER BY CMT_DATE ASC
	</select>

	<!-- 리뷰 등록 -->
	<insert id="insertReview" parameterType="Review"
		useGeneratedKeys="true" keyProperty="rvNo" keyColumn="RV_NO">
		INSERT INTO REVIEW (
            RV_NO, 
            RV_WRITER_NO, 
            F_CODE, 
            F_TYPE,
            RV_DATE, 
            RV_UPDATE, 
            RV_CONTENT, 
            RV_STATUS, 
            RV_LIKES, 
            RV_READ_COUNT,
            RV_CMT_COUNT
			)
			VALUES(
				SEQ_RV_NO.NEXTVAL,
				#{rvWriterNo},
				#{fCode},
				DEFAULT,
				DEFAULT,
				DEFAULT,
				#{rvContent},
				DEFAULT,
				DEFAULT,
				DEFAULT,
				DEFAULT
			)
	</insert>	

	<!-- 리뷰 수정 -->
	<update id="updateReview" parameterType="Review">
		UPDATE REVIEW
		SET    RV_UPDATE = SYSDATE,
			   <choose>
			       <when test="rvContent != null">
				   	   RV_CONTENT = #{rvContent}
				   </when>
				   <when test="rvStatus != null">
				   	   RV_STATUS = #{rvStatus}
				   </when>
			   </choose>	
		WHERE  F_CODE = #{fCode} AND 
			   F_TYPE = 'movie' AND 
			   RV_NO = #{rvNo}
	</update>	
	
</mapper>