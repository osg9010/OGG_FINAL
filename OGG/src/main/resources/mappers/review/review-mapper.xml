<?xml version="1.0" encoding="UTF-8"?>
<!-- mybatis mapper 설정 파일임을 선언한다. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

	<mapper namespace="com.project.ogg.review.model.mapper.ReviewMapper">
	
	<!-- REVIEW sql-->
	<sql id="reviewSql">
		SELECT RV_NO, 
		       F_CODE, 
		       RV_WRITER_NO, 
		       RV_DATE, 
		       RV_UPDATE, 
		       RV_CONTENT, 
		       RV_STATUS, 
		       RV_LIKES,
		       RV_READCOUNT,
		       M.M_NICKNAME,
		       CMT_COUNT		
		FROM REVIEW R
		JOIN MEMBER M ON (M.M_NO = R.RV_WRITER_NO)
	</sql>
	
	<!-- REVIEW_CMT sql-->
	<sql id="reviewCmtSql">
		SELECT RV_CMT_NO, 
			   RV_NO, 
			   RV_CMT_WRITER_NO, 
			   RV_CMT_DATE, 
			   RV_CMT_UPDATE, 
			   RV_CMT_CONTENT, 
			   RV_CMT_STATUS, 
			   RV_CMT_LIKES, 
			   RV_CMT_GROUP, 
			   RV_CMT_DEPTH
		FROM REVIEW_CMT
	</sql>
	
	<!-- REVIEW resultMap-->
	<resultMap type="Review" id="reviewResultMap">
		<id property="rvNo" column="RV_NO" />
		<result property="fCode" column="F_CODE" />
		<result property="rvWriterNo" column="RV_WRITER_NO" />
		<result property="rvDate" column="RV_DATE" />
		<result property="rvUpdate" column="RV_UPDATE" />
		<result property="rvContent" column="RV_CONTENT" />
		<result property="rvStatus" column="RV_STATUS" />
		<result property="rvLikes" column="RV_LIKES" />
		<result property="rvReadCount" column="RV_READCOUNT" />
		<result property="rvNickname" column="M_NICKNAME" />
		<result property="rvCmtCount" column="CMT_COUNT" />
	</resultMap>	

	<!-- REVIEW-CMTS resultMap-->
	<resultMap type="ReviewCmt" id="reviewCmtResultMap">
		<id property="cmtNo" column="CMT_NO" />
		<result property="rvNo" column="RV_NO" />
		<result property="cmtWriterNo" column="CMT_WRITER_NO" />
		<result property="cmtDate" column="CMT_DATE" />
		<result property="cmtUpDate" column="CMT_UPDATE" />
		<result property="cmtContent" column="CMT_CONTENT" />
		<result property="cmtStatus" column="CMT_STATUS" />
		<result property="cmtLikes" column="CMT_LIKES" />
		<result property="cmtGroup" column="CMT_GROUP" />
		<result property="cmtDepth" column="CMT_DEPTH" />
		<result property="cmtNickname" column="M_NICKNAME" />
	</resultMap>	

	<!-- FILM resultMap-->
	<resultMap type="Film" id="filmResultMap">
		<id property="fCode" column="F_CODE" />
		<result property="fTitle" column="F_TITLE" />
		<result property="fStarred" column="F_STARRED" />
		<result property="fDib" column="F_DIB" />
	</resultMap>	
	
	<!-- 리뷰 개수 조회 -->
	<select id="selectBoardCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*) FROM REVIEW 
		WHERE F_CODE = #{fcode} AND RV_STATUS = 'Y'
	</select>

	<!-- 리뷰 전체 조회 -->
	<select id="selectAll" resultMap="reviewResultMap">
		<include refid="reviewSql"></include>
		WHERE RV_STATUS = 'Y'
		ORDER BY RV_LIKES DESC
	</select>

	<!-- 특정 필름 리뷰 조회 -->
	<select id="selectReviewByFilm" parameterType="_int" resultMap="reviewResultMap">
		<include refid="reviewSql"></include>
		WHERE F_CODE = #{fcode} AND RV_STATUS = 'Y'
		ORDER BY R.RV_LIKES DESC
	</select>
	
	<!-- 리뷰 상세 조회 -->
	<select id="selectReviewByNo" parameterType="_int" resultMap="reviewResultMap">
		<include refid="reviewSql"></include>
		WHERE RV_STATUS = 'Y' AND RV_NO = #{no} 
	</select>
	
	<!-- 리뷰별 댓글 개수 조회 -->
	<select id="selectCmtCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*) FROM REVIEW_CMT WHERE CMT_STATUS = 'Y' AND RV_NO= #{no}
	</select>
	
	<!-- 댓글 조회 -->
	<select id="selectCmtByNo" parameterType="_int" resultMap="reviewCmtResultMap">
		SELECT CMT_NO, 
		       RV_NO, 
		       CMT_WRITER_NO, 
		       CMT_DATE, 
		       CMT_UPDATE, 
		       CMT_CONTENT, 
		       CMT_STATUS, 
		       CMT_LIKES, 
		       CMT_GROUP, 
		       CMT_DEPTH, 
		       M.M_NICKNAME
		FROM REVIEW_CMT R
		JOIN MEMBER M ON (M.M_NO = R.CMT_WRITER_NO)
		WHERE CMT_STATUS = 'Y' AND RV_NO = #{no}
		ORDER BY CMT_LIKES DESC
	</select>

	<!-- 영화 체크 -->		
	<select id="checkFilm" parameterType="_int" resultMap="filmResultMap">
		SELECT *
		FROM FILM
		WHERE F_CODE = #{fCode}
	</select>
	
	<!-- 영화 인서트 -->
	<insert id="insertFilm" parameterType="Film"
		useGeneratedKeys="true" keyProperty="fCode" keyColumn="F_CODE">
		INSERT INTO FILM (
	            F_CODE, 
	            F_TITLE 
			)
			VALUES(
				#{fCode},
				#{fTitle}
	      	)	
	</insert>
	
	<!-- 리뷰 등록 -->
	<insert id="insertReview" parameterType="Review"
		useGeneratedKeys="true" keyProperty="rvNo" keyColumn="RV_NO">
		INSERT INTO REVIEW (
			    RV_NO, 
		        F_CODE, 
		        RV_WRITER_NO, 
		        RV_DATE, 
		        RV_UPDATE, 
		        RV_CONTENT, 
		        RV_STATUS, 
		        RV_LIKES, 
		        RV_READCOUNT,
		        CMT_COUNT
			)
			VALUES(
				SEQ_RV_NO.NEXTVAL,
				#{fCode},
				#{rvWriterNo},
				DEFAULT,
				DEFAULT,
				#{rvContent},
				DEFAULT,
				DEFAULT,
				DEFAULT,
				DEFAULT
			)
	</insert>	
	
	<!-- 리뷰 수정 -->
	<update id="updateReview" parameterType="Review">
		UPDATE REVIEW
		SET 
			RV_CONTENT = #{rvContent},
		    RV_UPDATE = SYSDATE
		WHERE F_CODE = #{fCode} AND RV_WRITER_NO = #{rvWriterNo}
	</update>	
	
	<!-- 리뷰 삭제 -->
	<update id="deleteReview" parameterType="Review">
		UPDATE REVIEW
		SET 
		    RV_UPDATE = SYSDATE,
		    RV_STATUS = 'N'
		WHERE F_CODE = #{fCode} AND RV_WRITER_NO = #{rvWriterNo}
	</update>	
	
	<!-- 댓글수 업데이트 -->
	<update id="updateCmtCount" parameterType="int">
		UPDATE REVIEW R
		SET 
			R.CMT_COUNT = (SELECT COUNT(CMT_NO)
		                  FROM REVIEW_CMT
		                  WHERE RV_NO = #{RV_NO})
		WHERE R.RV_NO = #{RV_NO}
	</update>
	
</mapper>