<?xml version="1.0" encoding="UTF-8"?>
<!-- mybatis mapper 설정 파일임을 선언한다. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

	<mapper namespace="com.project.ogg.review.model.mapper.ReviewMapper">
	
	<!-- REVIEW sql-->
	<sql id="reviewSql">
		SELECT RV_NO, 
		       RV_WRITER_NO,
		       F_CODE,
		       F_TYPE,
		       RV_DATE, 
		       RV_UPDATE, 
		       RV_CONTENT, 
		       RV_STATUS, 
		       RV_LIKES,
		       RV_READ_COUNT,
		       RV_CMT_COUNT,
		       M.M_NICKNAME	
		FROM REVIEW R
		JOIN MEMBER M ON (M.M_NO = R.RV_WRITER_NO)
	</sql>
	
	<!-- REVIEW_CMT sql-->
	<sql id="reviewCmtSql">
		SELECT CMT_NO, 
		       RV_NO, 
		       CMT_WRITER_NO, 
		       CMT_DATE, 
		       CMT_UPDATE, 
		       CMT_CONTENT, 
		       CMT_STATUS, 
		       CMT_LIKES, 
		       CMT_GROUP, 
		       CMT_DEPTH, 
		       M.M_NICKNAME
		FROM REVIEW_CMT R
		JOIN MEMBER M ON (M.M_NO = R.CMT_WRITER_NO)
	</sql>
	
	<!-- REVIEW_LIKES sql-->
	<sql id="reviewLikesSql">
		SELECT L_NO,
		       M_NO,
		       RV_NO,
		       CMT_NO,
		       F_CODE,
		       F_TYPE,
		       F_LIKES,
		       F_STAR
		FROM REVIEW_LIKES
	</sql>
	
	<!-- REVIEW resultMap-->
	<resultMap type="Review" id="reviewResultMap">
		<id property="rvNo" column="RV_NO" />
		<result property="rvWriterNo" column="RV_WRITER_NO" />
		<result property="fCode" column="F_CODE" />
		<result property="fType" column="F_TYPE" />
		<result property="rvDate" column="RV_DATE" />
		<result property="rvUpdate" column="RV_UPDATE" />
		<result property="rvContent" column="RV_CONTENT" />
		<result property="rvStatus" column="RV_STATUS" />
		<result property="rvLikes" column="RV_LIKES" />
		<result property="rvReadCount" column="RV_READ_COUNT" />
		<result property="rvCmtCount" column="RV_CMT_COUNT" />
		<result property="rvNickname" column="M_NICKNAME" />
	</resultMap>	

	<!-- REVIEW_CMTS resultMap-->
	<resultMap type="ReviewCmt" id="reviewCmtResultMap">
		<id property="cmtNo" column="CMT_NO" />
		<result property="rvNo" column="RV_NO" />
		<result property="cmtWriterNo" column="CMT_WRITER_NO" />
		<result property="cmtDate" column="CMT_DATE" />
		<result property="cmtUpDate" column="CMT_UPDATE" />
		<result property="cmtContent" column="CMT_CONTENT" />
		<result property="cmtStatus" column="CMT_STATUS" />
		<result property="cmtLikes" column="CMT_LIKES" />
		<result property="cmtGroup" column="CMT_GROUP" />
		<result property="cmtDepth" column="CMT_DEPTH" />
		<result property="cmtNickname" column="M_NICKNAME" />
	</resultMap>	

	<!-- FILM resultMap-->
	<resultMap type="Film" id="filmResultMap">
		<id property="fCode" column="F_CODE" />
		<result property="fTitle" column="F_TITLE" />
	</resultMap>	

	<!-- REVIEW_LIKES resultMap-->
	<resultMap type="ReviewLikes" id="reviewLikesResultMap">
		<id property="lNo" column="L_NO" />
		<result property="fTitle" column="F_TITLE" />
		<result property="mNo" column="M_NO" />
		<result property="rvNo" column="RV_NO" />
		<result property="cmtNo" column="CMT_NO" />
		<result property="fCode" column="F_CODE" />
		<result property="fType" column="F_TYPE" />
		<result property="fLikes" column="F_LIKES" />
		<result property="fStar" column="F_STAR" />
	</resultMap>	
	
	<!-- 영화 체크 -->		
	<select id="checkFilm" parameterType="_int" resultMap="filmResultMap">
		SELECT *
		FROM FILM
		WHERE F_CODE = #{fCode}
	</select>
	
	<!-- 영화 등록 -->
	<insert id="insertFilm" parameterType="Film">
		INSERT INTO FILM (
	            F_CODE,
	            F_TYPE,
	            F_TITLE 
			)
			VALUES(
				#{fCode},
				DEFAULT,
				#{fTitle}
	      	)	
	</insert>
	
	<!-- 평가 조회 (영화 별점) -->
	<select id="selectStar" parameterType="ReviewLikes" resultMap="reviewLikesResultMap">
		SELECT *
			FROM(
				SELECT L_NO,
				       M_NO,
				       RV_NO,
				       CMT_NO,
				       F_CODE,
				       F_TYPE,
				       F_LIKES,
				       F_STAR,
				       L_DATE,
				       L_UPDATE
				FROM REVIEW_LIKES
				WHERE M_NO = #{mNo} AND F_STAR > 0 AND F_CODE=#{fCode}
				ORDER BY L_UPDATE DESC)
			WHERE ROWNUM = 1
	</select>
	
	<!-- 별점 저장 -->
	<insert id="insertStar" parameterType="ReviewLikes">
		INSERT INTO REVIEW_LIKES(
	            L_NO,
	            M_NO,
	            F_CODE,
	            F_TYPE,
	            F_STAR
		      )
		      VALUES(
		            SEQ_LIKES_NO.NEXTVAL,
		            #{mNo},
		            #{fCode},
		            'movie',
		            #{fStar}
		      )
	</insert>
	
	<!-- 리뷰 조회 (전체) -->
	<select id="selectReviewAll" resultMap="reviewResultMap">
		<include refid="reviewSql"></include>
		WHERE RV_STATUS = 'Y'
		ORDER BY RV_LIKES DESC
	</select>

	<!-- 리뷰 조회 (영화 별점) -->
	<select id="selectReviewByFilm" parameterType="_int" resultMap="reviewResultMap">
		<include refid="reviewSql"></include>
		WHERE F_CODE = #{fcode} AND F_TYPE = 'movie' AND RV_STATUS = 'Y'
		ORDER BY R.RV_LIKES DESC
	</select>
	
	<!-- 리뷰 조회 (상세) -->
	<select id="selectReviewByNo" parameterType="_int" resultMap="reviewResultMap">
		<include refid="reviewSql"></include>
		WHERE RV_STATUS = 'Y' AND RV_NO = #{no} 
	</select>

	<!-- 리뷰 조회 (리뷰 개수) -->
	<select id="selectReviewCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*) FROM REVIEW 
		WHERE F_CODE = #{fcode} AND F_TYPE = 'movie' AND RV_STATUS = 'Y'
	</select>
	
	<!-- 리뷰 등록 -->
	<insert id="insertReview" parameterType="Review"
		useGeneratedKeys="true" keyProperty="rvNo" keyColumn="RV_NO">
		INSERT INTO REVIEW (
            RV_NO, 
            RV_WRITER_NO, 
            F_CODE, 
            F_TYPE,
            RV_DATE, 
            RV_UPDATE, 
            RV_CONTENT, 
            RV_STATUS, 
            RV_LIKES, 
            RV_READ_COUNT,
            RV_CMT_COUNT
			)
			VALUES(
				SEQ_RV_NO.NEXTVAL,
				#{rvWriterNo},
				#{fCode},
				DEFAULT,
				DEFAULT,
				DEFAULT,
				#{rvContent},
				DEFAULT,
				DEFAULT,
				DEFAULT,
				DEFAULT
			)
	</insert>	

	<!-- 리뷰 수정 -->
	<update id="updateReview" parameterType="Review">
		UPDATE REVIEW
		SET 
			RV_UPDATE = SYSDATE,
			<choose>
		    <when test="rvContent != null">
			  	RV_CONTENT = #{rvContent}
		    </when>
		    <when test="rvStatus != null">
				RV_STATUS = #{rvStatus}
		    </when>
		    </choose>	
		WHERE F_CODE = #{fCode} AND F_TYPE = 'movie' AND RV_NO = #{rvNo}
	</update>	
	
	<!-- 리뷰 삭제 -->
	<update id="deleteReview" parameterType="Review">
		UPDATE REVIEW
		SET 
			RV_UPDATE = SYSDATE,
		    RV_STATUS = #{rvStatus}
		WHERE F_CODE = #{fCode} AND F_TYPE = 'movie' AND RV_NO = #{rvNo}
	</update>	
	
	<!-- 댓글 조회 (리뷰 번호) -->
	<select id="selectCmtByReviewNo" parameterType="_int" resultMap="reviewCmtResultMap">
		<include refid="reviewCmtSql"></include>
		WHERE CMT_STATUS = 'Y' AND RV_NO = #{no}
		ORDER BY CMT_DATE ASC
	</select>
	
	<!-- 댓글 조회 (댓글 번호) -->
	<select id="selectCmtByCmtNo" parameterType="ReviewCmt" resultMap="reviewCmtResultMap">
		<include refid="reviewCmtSql"></include>
		WHERE CMT_STATUS = 'Y' AND CMT_NO = #{cmtNo}
	</select>
	
	<!-- 댓글수 조회 (리뷰별) -->
	<select id="selectCmtCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*) FROM REVIEW_CMT WHERE CMT_STATUS = 'Y' AND RV_NO= #{no}
	</select>
	
	<!-- 리뷰 테이블 댓글수 업데이트 -->
	<update id="updateCmtCount" parameterType="_int">
		UPDATE REVIEW
		SET RV_CMT_COUNT = (SELECT COUNT(CMT_NO)
		                  FROM REVIEW_CMT
		                  WHERE RV_NO = #{rvNo} AND CMT_STATUS = 'Y')
		WHERE RV_NO = #{rvNo}
	</update>
	
	<!-- 댓글 등록 -->
	<insert id="writeCmt" parameterType="ReviewCmt"
		useGeneratedKeys="true" keyProperty="cmtNo" keyColumn="CMT_NO">
		INSERT INTO REVIEW_CMT (
		            CMT_NO, 
		            RV_NO, 
		            CMT_WRITER_NO, 
		            CMT_DATE,  
		            CMT_UPDATE, 
		            CMT_CONTENT, 
		            CMT_STATUS, 
		            CMT_LIKES, 
		            CMT_GROUP,
		            CMT_DEPTH
				)
				VALUES(
					SEQ_CMT_NO.NEXTVAL,
					#{rvNo},
					#{cmtWriterNo},
					DEFAULT,
					DEFAULT,
					#{cmtContent},
					DEFAULT,
					DEFAULT,
					SEQ_CMT_NO.NEXTVAL,
		         	DEFAULT
		      )
	</insert>	
	
	<!-- 댓글 수정 및 삭제 -->
	<update id="updateCmt" parameterType="ReviewCmt">
		UPDATE REVIEW_CMT
		SET 
			CMT_UPDATE = SYSDATE,
		<choose>
	    <when test="cmtContent != null">
		  	CMT_CONTENT = #{cmtContent}
	    </when>
	    <when test="cmtStatus != null">
			CMT_STATUS = #{cmtStatus}
	    </when>
	    </choose>
		WHERE CMT_NO = #{cmtNo}
	</update>
	
	
</mapper>